// Code generated by GG version . DO NOT EDIT.

//go:build !gg

package cli

import (
	"context"
	"flag"
	"fmt"
	controller "github.com/555f/gg/examples/rest-service-chi/internal/usecase/controller"
	"os"
)

func Run(ctx context.Context, profileController controller.ProfileController) {
	switch os.Args[1] {
	case "create":
		var firstName string
		var lastName string
		var address string
		var zip int
		createCmd := flag.NewFlagSet("create", flag.ExitOnError)
		createCmd.StringVar(&firstName, "firstName", "", "")
		createCmd.StringVar(&lastName, "lastName", "", "")
		createCmd.StringVar(&address, "address", "", "")
		createCmd.IntVar(&zip, "zip", 0, "")
		err := createCmd.Parse(os.Args[2:])
		if err != nil {
			fmt.Println(err)
			return
		}
		_, err := profileController.Create(ctx, firstName, lastName, address, zip)
		if err != nil {
			fmt.Println(err)
			return
		}
	case "download_file":
		var id string
		var onlyCloud bool
		download_fileCmd := flag.NewFlagSet("download_file", flag.ExitOnError)
		download_fileCmd.StringVar(&id, "id", "", "идентификатор")
		download_fileCmd.BoolVar(&onlyCloud, "onlyCloud", false, "")
		err := download_fileCmd.Parse(os.Args[2:])
		if err != nil {
			fmt.Println(err)
			return
		}
		data, err := profileController.DownloadFile(ctx, id, onlyCloud)
		if err != nil {
			fmt.Println(err)
			return
		}
		fmt.Println(data)
	case "remove":
		var id string
		removeCmd := flag.NewFlagSet("remove", flag.ExitOnError)
		removeCmd.StringVar(&id, "id", "", "")
		err := removeCmd.Parse(os.Args[2:])
		if err != nil {
			fmt.Println(err)
			return
		}
		err = profileController.Remove(ctx, id)
		if err != nil {
			fmt.Println(err)
			return
		}
	}
}
